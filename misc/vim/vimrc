set exrc
set secure
set nocompatible

" Hint: read ':help script'

" Load installed plugins from ~/.vim/pack/*/opt/{name}
" (first subdir is user defined arbitrary category)
" see plugin-list.txt
"
" vim plugins autoadded from pack/plugins/start/{name} are not listed here
packadd! gundo.vim
packadd! molokai
packadd! nerdcommenter
packadd! pgsql.vim
packadd! syntastic
packadd! vim-better-whitespace
"packadd! vim-easytags
"packadd! vim-fugitive
packadd! vim-json
packadd! vim-sleuth
packadd! vim-sneak
packadd! vim-surround

" NOTE NOTE NOTE NOTE NOTE
"
" Do not put filetype autocmds here. Put them in ~/.vim/filetype.vim
"
" NOTE NOTE NOTE NOTE NOTE

" Use , instead of \ for the <Leader> key
let mapleader = ","

" always use cscope as well as ctags if both present
set cscopetag

" Discover filetype commands in ~/.vim/filetype.vim etc; see :help filetype
" and enable autoload of plugin and indent configs
filetype on
filetype plugin on
filetype indent on

" syntastic plugin
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
" Disable check on open until we fix up the search path stuff
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_enable_signs=1
" Check header files too. Assume all headers are C by default, but ftdetect
" can override this.
let g:syntastic_c_check_header = 1
let g:syntastic_cpp_check_header = 0
" But don't report errors from headers in .c file editing
let g:syntastic_c_remove_include_errors = 1
let g:syntastic_cpp_remove_include_errors = 1
" Syntastic config for C compilers is stored in .syntastic_c_config
" in project directory by default, but we don't really want that
" as it's a pain when not everyone in the proj uses vim.
"
" See https://github.com/scrooloose/syntastic/wiki/C:---gcc
"
" One line per -I directive or other command
"
" To avoid keeping them in the project dirs, and working aronud multiple
" clones etc, we keep them in ftdetect plugins and set them there.
"
" Handy hint - use :call SyntasticInfo()


" localvimrc plugin
let g:localvimrc_sandbox = 0
let g:localvimrc_whitelist = "/home/craig/projects/.*"

" Vim's wildcard ignore for uninteresting files
set wildignore+=*/tmp/*,*.so,*.sw?,*.zip,*.tar,*.tgz,*.tar.gz,*.o,*/.git/*

" ctrlp config
let g:ctrlp_extensions = ['tag', 'mixed']

" Use the nearest revision control dir as the ctrlp root
let g:ctrlp_working_path_mode = 'r'

" use gotofile (gf) via ctrlp to highlight and goto filename
nmap <leader>gf :CtrlP<CR><C-\>w

" Easy bindings for its various modes
nmap <F2> :CtrlPBuffer<cr>
nmap <F3> :CtrlPMixed<cr>

" Allow buffers to be hidden with changes unwritten
set hidden

" In the buffer menu use menu expansion for tab
set wildchar=<Tab> wildmenu wildmode=full

" Open buffer menu with F7
set wildcharm=<C-Z>
nnoremap <F7> :b <C-Z>

" Enable the list of buffers
let g:airline#extensions#tabline#enabled = 1
" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'

" Page up for next buffer
nmap <A-PageUp> :bnext<CR>
" Page down for previous buffer
nmap <A-PageDown> :bprevious<CR>
" Home for new blank buffer
nmap <A-Home> :enew<CR>
" End for close buffer
nmap <A-End> :bp <BAR> bd #<CR>

" Keymap F5 to rebuild and reload cscope db;
" use the -q option to build an inverted index too
"
" We set INCLUDEDIRS to control what cscope looks for
"
map <F5> :!cscope -R -q -b<CR>:cs reset<CR><CR>


" Persistent undo history; must create directory in advance
set undofile
set undodir=/home/craig/.vimundo/

" Change the colours
"colorscheme molokai

" Use pgsql syntax for all .sql files
let g:sql_type_default = 'pgsql'

" Use the ~/.bash_aliases file when invoking system commands and shells
" seee https://stackoverflow.com/q/4642822/398670
let $BASH_ENV = "~/.bash_aliases"

" Automatic space highlighting 
" (DISABLED now in favour of better-whitespace plugin)
"
" https://vim.fandom.com/wiki/Highlight_unwanted_spaces
"
" but note that this will clobber your pattern list
" so I'd like a better way really
"
"highlight ExtraWhitespace ctermbg=red guibg=red
"match ExtraWhitespace /\s\+$/
"autocmd BufWinEnter * match ExtraWhitespace /\s\+$\| \+\ze\t/
"autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
"autocmd InsertLeave * match ExtraWhitespace /\s\+$\| \+\ze\t/
"autocmd BufWinLeave * call clearmatches()
